"""
Django settings for mastercontrat project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# Application definition

INSTALLED_APPS = [
    'bootstrap4',
    'frontpage.apps.FrontpageConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # For bucket storage
    'storages',
    # For real-time chat
    'chat',
    'channels',
]

# For real-time chat
ASGI_APPLICATION = 'mastercontrat.asgi.application'
# WSGI_APPLICATION = 'mastercontrat.wsgi.application'

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mastercontrat.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': [os.path.join(BASE_DIR, 'frontpage.templates')],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',    # noqa
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',    # noqa
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',    # noqa
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',    # noqa
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
if os.getenv('ENV') == "GITHUB":
    DB_NAME = os.getenv("DB_NAME")
    DB_USER = os.getenv("DB_USER")
    DB_PASSWORD = os.getenv("DB_PASSWORD")
    DB_HOST = os.getenv("DB_HOST")
else:
    DB_NAME = os.getenv("BUCKET_NAME")
    DB_USER = os.getenv("dev_django")
    DB_PASSWORD = os.getenv("dev_password")
    DB_HOST = "localhost"

DB_PORT = "5432"

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}

DEBUG = True
ALLOWED_HOSTS = ["*"]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Static files settings
# TODO: disable it to do :
#       --> collecstatic
#       --> Test photo upload

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_URL = '/media/'

# AWS SETTINGS
# TODO: enable it to do:
#       --> collecstatic
#       --> Test photo upload

# AWS_ACCESS_KEY_ID = os.getenv('ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = os.getenv('SECRET_ACCESS_KEY')

# AWS_STORAGE_BUCKET_NAME = os.getenv("BUCKET_NAME")
# AWS_S3_REGION_NAME = os.getenv('S3_REGION_NAME')
# AWS_S3_HOST = 's3.%s.scw.cloud' % (AWS_S3_REGION_NAME,)
# AWS_S3_ENDPOINT_URL = 'https://%s' % (AWS_S3_HOST,)
# AWS_S3_OBJECT_PARAMETERS = {
#     'CacheControl': 'max-age=86400',
# }

# AWS STATIC SETTINGS

# AWS_LOCATION = 'static'
# AWS_DEFAULT_ACL = 'public-read'
# AWS_QUERYSTRING_AUTH = False
# AWS_S3_SIGNATURE_VERSION = 's3v4'

# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# STATIC_URL = '{}/{}/'.format(AWS_S3_ENDPOINT_URL, AWS_LOCATION)

# PUBLIC_MEDIA_LOCATION = 'media/'
# MEDIA_URL = (
#     f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}' +
#     f'/{PUBLIC_MEDIA_LOCATION}'
# )
# DEFAULT_FILE_STORAGE = 'frontpage.storage_backends.PublicMediaStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Channels Specific
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# TODO: Email service for passwords_reset and send user username & password
EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = str(BASE_DIR.joinpath('sent_emails'))
